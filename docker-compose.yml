version: '3'

services:
    main-service:
        container_name: main-service
        build: './main-service'
        command: npm run start
        env_file: .env
        ports:
            - ${MAIN_PORT}:${MAIN_PORT}
        networks:
            - webnet
        volumes:
            - ./main-service:/usr/src/app
            - /usr/src/app/node_modules
        depends_on:
            - postgres-db
            - transport-service
        profiles: ["prod"]

    transport-service:
        container_name: transport-service
        build: './transport-service'
        command: go run main.go
        env_file: .env
        ports:
            - ${GRPC_PORT}:${GRPC_PORT}
        networks:
            - webnet
        volumes:
            - ./transport-service:/go/src/
        depends_on:
            - redis

    postgres-db:
        container_name: postgres
        image: postgres:alpine
        env_file: ./.env
        environment:
            POSTGRES_DB: ${PG_DB}
            POSTGRES_USER: ${PG_USER}
            POSTGRES_PASSWORD: ${PG_PASS} 
            PG_DATA: /var/lib/postgresql/data
        ports:
            - "5432:5432"
        expose:
            - '5432'
        networks:
            - webnet
        volumes:
            - pgdata:/var/lib/postgresql/data
            
    redis:
        container_name: redis
        image: redis:alpine
        hostname: redis
        ports:
            - "6379:6379"
        expose:
            - '6379'
        networks:
            - webnet
            
networks:
    webnet:

volumes:
    pgdata: